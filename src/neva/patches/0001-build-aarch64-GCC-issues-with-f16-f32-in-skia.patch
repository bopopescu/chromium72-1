From 56de94df9159c78610d3bbee082d3482a785d124 Mon Sep 17 00:00:00 2001
From: Vlad Mukulov <vladislav.mukulov@lge.com>
Date: Thu, 16 May 2019 08:17:35 +0300
Subject: [PATCH] [build][aarch64] GCC issues with f16<->f32 in skia

:Release Notes:
Fix aarch64 build of skia

:Detailed Notes:
Cherry-picked this patch from: https://github.com/OSSystems/meta-browser/blob/master/recipes-browser/chromium/files/aarch64-skia-build-fix.patch

GCC (tested rocko's 7.3.0) cannot find these intrinsics and the build fails:

../../third_party/skia/src/opts/SkRasterPipeline_opts.h: In function 'neon::F neon::from_half(neon::U16)':
../../third_party/skia/src/opts/SkRasterPipeline_opts.h:657:26: error: cannot convert 'neon::U16 {aka short unsigned int}' to 'float16x4_t {aka __vector(4) __fp16}' for argument '1' to '
float32x4_t vcvt_f32_f16(float16x4_t)'
     return vcvt_f32_f16(h);
                          ^
../../third_party/skia/src/opts/SkRasterPipeline_opts.h: In function 'neon::U16 neon::to_half(neon::F)':
../../third_party/skia/src/opts/SkRasterPipeline_opts.h:677:26: error: cannot convert 'neon::F {aka float}' to 'float32x4_t {aka __vector(4) float}' for argument '1' to 'float16x4_t vcvt
_f16_f32(float32x4_t)'
     return vcvt_f16_f32(f);

Upstream seems to have had similar issues according to
https://skia-review.googlesource.com/c/skia/+/84222, but there is no fix at the
moment.

Migration of https://gpro.lgsvl.com/218317 patch

:Test Scenario:
Aarch64 Build checked

:QA Notes:
Test-cases: N/A

:Issues Addressed:
---
 src/opts/SkRasterPipeline_opts.h | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/src/opts/SkRasterPipeline_opts.h b/src/opts/SkRasterPipeline_opts.h
index 01322c5..a4a8cf1 100644
--- a/src/opts/SkRasterPipeline_opts.h
+++ b/src/opts/SkRasterPipeline_opts.h
@@ -729,10 +729,7 @@ SI F approx_powf(F x, F y) {
 }
 
 SI F from_half(U16 h) {
-#if defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    return vcvt_f32_f16(h);
-
-#elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
+#if defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
     return _mm256_cvtph_ps(h);
 
 #else
@@ -749,10 +746,7 @@ SI F from_half(U16 h) {
 }
 
 SI U16 to_half(F f) {
-#if defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    return vcvt_f16_f32(f);
-
-#elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
+#if defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
     return _mm256_cvtps_ph(f, _MM_FROUND_CUR_DIRECTION);
 
 #else
-- 
2.7.4

