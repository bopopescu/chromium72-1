// This file is generated by PAL generator, do not modify.
// To make changes, modify the source file:
// test3.json

#include "pal/ipc/renderer/sample/sample_proxy.h"
#include "pal/ipc/sample_messages.h"

namespace pal {

SampleProxy::SampleProxy(content::RenderFrame* frame) : render_frame_(frame) {}

void SampleProxy::CallFunc(std::string arg1, std::string arg2) {
  if (render_frame_) {
    render_frame_->Send(
        new SampleHostMsg_CallFunc(render_frame_->GetRoutingID(), arg1, arg2));
  }
}

void SampleProxy::ProcessData(int pal_async_callback_id,
                              std::string data,
                              int32_t callback_index) {
  if (render_frame_) {
    render_frame_->Send(new SampleHostMsg_ProcessData(
        render_frame_->GetRoutingID(), pal_async_callback_id, data,
        callback_index));
  }
}

void SampleProxy::SubscribeToEvent() {
  if (render_frame_) {
    render_frame_->Send(
        new SampleHostMsg_SubscribeToEvent(render_frame_->GetRoutingID()));
  }
}

bool SampleProxy::Unsubscribe() {
  return (render_frame_) ? render_frame_->Send(new SampleHostMsg_Unsubscribe(
                               render_frame_->GetRoutingID()))
                         : false;
}

bool SampleProxy::Subscribe() {
  return (render_frame_) ? render_frame_->Send(new SampleHostMsg_Subscribe(
                               render_frame_->GetRoutingID()))
                         : false;
}

}  // namespace pal
