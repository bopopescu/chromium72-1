// This file is generated by PAL generator, do not modify.
// To make changes, modify the source file:
// test1.json

#include "remote_pal_ipc/system_info/system_info_remote_pal_interface_ipc.h"

#include <limits>

#include "base/bind.h"
#include "content/public/renderer/render_frame.h"
#include "pal/ipc/renderer/system_info/system_info_proxy.h"
#include "third_party/blink/public/web/web_local_frame.h"

namespace pal {

SystemInfoRemotePalInterfaceIPC::SystemInfoRemotePalInterfaceIPC() = default;

SystemInfoRemotePalInterfaceIPC::~SystemInfoRemotePalInterfaceIPC() = default;

SystemInfoRemotePalInterfaceIPC::FrameCallbacks::FrameCallbacks() = default;
SystemInfoRemotePalInterfaceIPC::FrameCallbacks::~FrameCallbacks() = default;

content::RenderFrame* SystemInfoRemotePalInterfaceIPC::getFrame() const {
  content::RenderFrame* frame = content::RenderFrame::FromWebFrame(
      blink::WebLocalFrame::FrameForCurrentContext());
  if (!frame) {
    LOG(ERROR) << "Frame isn't available in Remote 'SystemInfo' Interface";
    return nullptr;
  }
  return frame;
}

std::string SystemInfoRemotePalInterfaceIPC::GetSSLCertPath() {
  content::RenderFrame* frame = getFrame();
  std::string pal_ret;
  if (!frame)
    return pal_ret;
  std::unique_ptr<pal::SystemInfoProxy> proxy(new pal::SystemInfoProxy(frame));
  proxy->GetSSLCertPath(pal_ret);
  return pal_ret;
}

}  // namespace pal
