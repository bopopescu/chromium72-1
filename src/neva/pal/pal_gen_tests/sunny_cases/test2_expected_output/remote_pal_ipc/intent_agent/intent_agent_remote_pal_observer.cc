// This file is generated by PAL generator, do not modify.
// To make changes, modify the source file:
// test2.json

#include "intent_agent_remote_pal_observer.h"

#include "pal/ipc/intent_agent_messages.h"
#include "pal/public/pal.h"
#include "pal/public/pal_factory.h"
#include "remote_pal_ipc/intent_agent/intent_agent_remote_pal_interface_ipc.h"

namespace content {

IntentAgentRemotePalObserver::IntentAgentRemotePalObserver(
    RenderFrame* render_frame)
    : RenderFrameObserver(render_frame) {}

void IntentAgentRemotePalObserver::OnDestruct() {
  delete this;
}

bool IntentAgentRemotePalObserver::OnMessageReceived(
    const IPC::Message& message) {
  bool handled = true;
  IPC_BEGIN_MESSAGE_MAP(IntentAgentRemotePalObserver, message)
  IPC_MESSAGE_HANDLER(IntentAgentMsg_InvokeIntentDone, OnInvokeIntentDone)
  IPC_MESSAGE_UNHANDLED(handled = false)
  IPC_END_MESSAGE_MAP()
  return handled;
}

void IntentAgentRemotePalObserver::OnInvokeIntentDone(int pal_async_callback_id,
                                                      int error_code,
                                                      std::string data) {
  using namespace pal;
  IntentAgentRemotePalInterfaceIPC* interface =
      reinterpret_cast<IntentAgentRemotePalInterfaceIPC*>(
          pal::GetInstance()->GetIntentAgentInterface());

  if (interface == nullptr) {
    LOG(ERROR) << "No Remote PAL implemented for interface";
    return;
  }
  interface->NotifyInvokeIntent(pal_async_callback_id, error_code, data);
}

}  // namespace content
